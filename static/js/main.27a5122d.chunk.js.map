{"version":3,"sources":["static/RoyJackmanCV.pdf","svg/crow.svg","components/homepage/NNGraph.js","components/ai/NeuralNetworks.js","components/ai/util.js","components/homepage/NNWidget.js","components/homepage/Homepage.js","components/ui/Constants.js","components/resume/ResumeItem.js","components/resume/ResumeList.js","components/resume/Resume.js","serviceWorker.js","components/ui/Header.js","components/ui/Footer.js","index.js"],"names":["module","exports","weightColorScale","chroma","scale","mode","bezierLink","x0","y0","x1","y1","weight","color","path","d3","midX","moveTo","bezierCurveTo","Tooltip","key","join","title","placement","interactive","d","toString","id","fill","strokeWidth","Math","abs","stroke","NNGraph","weightResponse","weights","layers","length","useState","maxWeight","setMaxWeight","minWeight","setMinWeight","circlePosn","index","infoLayers","circles","lines","layerWidth","shape","cx","i","push","cy","r","getNode","nodeKey","filter","val","localeCompare","layerWeights","arraySync","max","concat","min","j","k","source","props","viewBox","createModel","layerData","activation","inputSize","outputSize","loss","optimizer","model","tf","add","dense","inputShape","units","compile","localNNLoad","url","a","localNNSave","save","getWeightBounds","map","array","then","flat","reduce","head","tail","h","t","ranges","numPoints","vars","funcs","retval","illegal","rangeRandom","rng","random","temp","evaluate","_","includes","alert","scrubData","data","inputs","forEach","v","outputs","inputTensor","outputTensor","inputMax","inputMin","outputMax","outputMin","sub","div","DEFAULT_VARIABLES","DEFAULT_FUNCNAMES","NNWidget","state","acti","actiName","currentLoss","dataLoading","epochs","funcNames","math","Array","lossName","Promise","resolve","modelEpochs","opti","optiName","playing","predictions","getWeights","this","document","getElementById","innerHTML","dataT","output","Graphing","elemId","x","y","name","type","Scatterplot","func","newFuncs","Object","assign","setState","onEpochEnd","_epoch","logs","fit","shuffle","callbacks","predict","mul","transpose","generateGraphs","togglePlay","startLearning","Container","style","backgroundColor","border","borderRadius","borderColor","padding","Col","Row","minHeight","md","Accordion","Toggle","as","eventKey","Collapse","Slider","step","marks","value","onChange","_e","rebuildModel","pop","floor","newLD","DropdownButton","onSelect","_ek","e","target","Dropdown","Item","className","defaultValue","Button","onClick","localStorage","clear","Image","src","maxWidth","maxHeight","fontFamily","fontStyle","borderStyle","borderWidth","onMouseMove","offset","nativeEvent","offsetX","width","clientWidth","mx","mn","onMouseOut","timedLearning","textAnchor","textAlign","from","to","toFixed","margin","marginRight","size","newVars","valueLabelDisplay","newRanges","newFuncNames","onBlur","rebuildFunc","generateData","alignContent","React","Component","Homepage","AWS_SVG","CPP_SVG","JAVA_SVG","JAVASCRIPT_SVG","MATLAB_SVG","NUMPY_SVG","PYTHON_SVG","PYTORCH_SVG","R_SVG","SKLEARN_SVG","TENSORFLOW_SVG","calc","stable","card","bounds","getBoundingClientRect","height","trans","s","ResumeItem","itemId","position","bullets","startDate","endDate","logo","tools","itemColor","useSpring","xys","config","mass","tension","friction","set","setStable","clientX","clientY","onMouseUp","onMouseLeave","transform","interpolate","xs","Intl","DateTimeFormat","year","month","format","b","CHRON","WORK","EDU","items","aaq","Date","alt","bgu","binds","bscs","bsm","ml","mscs","tb","vyx","ResumeList","order","fluid","Resume","setOrder","opacity","delay","ButtonToolbar","ButtonGroup","textDecoration","href","CV","download","Boolean","window","location","hostname","match","Header","sm","block","variant","Footer","paddingTop","getFullYear","router","basename","process","exact","component","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.27a5122d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RoyJackmanCV.837b6016.pdf\";","module.exports = __webpack_public_path__ + \"static/media/crow.586617ea.svg\";","import React, { useState } from 'react'\r\nimport * as d3 from 'd3'\r\nimport chroma from 'chroma-js'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nexport const weightColorScale = chroma.scale(['red', 'blue']).mode('lab')\r\n\r\nfunction bezierLink (x0, y0, x1, y1, weight, color) {\r\n  var path = d3.path()\r\n  const midX = (x0 + x1) / 2\r\n  path.moveTo(x0, y0)\r\n  path.bezierCurveTo(midX, y0, midX, y1, x1, y1)\r\n  return (<Tooltip\r\n    key={'tooltip_' + [x0, y0, x1, y1].join('_')}\r\n    title={weight}\r\n    placement='bottom'\r\n    interactive>\r\n    <path\r\n      d={path.toString()}\r\n      id={[x0, y0, x1, y1].join('_')}\r\n      key={[x0, y0, x1, y1].join('_')}\r\n      fill=\"none\"\r\n      strokeWidth={Math.abs(weight * 5)}\r\n      stroke={weightColorScale(color)} />\r\n  </Tooltip>)\r\n}\r\n\r\nfunction NNGraph (weightResponse) {\r\n  const weights = weightResponse.weights\r\n  const layers = weights.length / 2\r\n  const [maxWeight, setMaxWeight] = useState(0.001)\r\n  const [minWeight, setMinWeight] = useState(-0.001)\r\n  const getRatio = (val) => (val - minWeight) / (maxWeight - minWeight)\r\n\r\n  const circlePosn = (index, infoLayers) => (index + 0.5) * 240 / infoLayers\r\n\r\n  var circles = []\r\n  var lines = []\r\n\r\n  const layerWidth = weights[0].shape[0]\r\n  const cx = circlePosn(0, layers + 1)\r\n  for (var i = 0; i < layerWidth; i++) {\r\n    circles.push(<circle\r\n      id={'node_0_' + i}\r\n      key={'node_0_' + i}\r\n      cx={cx}\r\n      cy={circlePosn(i, layerWidth)}\r\n      r={9} />)\r\n  }\r\n\r\n  const getNode = (nodeKey) => circles.filter((val) => nodeKey.localeCompare(val.key) === 0)[0]\r\n\r\n  for (i = 0; i < layers; i++) {\r\n    const layerWidth = weights[i * 2].shape[1]\r\n    const layerWeights = weights[i * 2].arraySync()\r\n    const cx = circlePosn((i + 1), layers + 1)\r\n\r\n    var max = Math.max(...[].concat(...layerWeights))\r\n    if (max > maxWeight) { setMaxWeight(max) }\r\n    var min = Math.min(...[].concat(...layerWeights))\r\n    if (min > minWeight) { setMinWeight(min) }\r\n\r\n    for (var j = 0; j < layerWidth; j++) {\r\n      const cy = circlePosn(j, layerWidth)\r\n      circles.push(<circle\r\n        id={'bias_' + (i + 1) + '_' + j}\r\n        key={'bias_' + (i + 1) + '_' + j}\r\n        cx={cx}\r\n        cy={cy + 13}\r\n        r={7}\r\n        fill=\"gray\" />)\r\n      circles.push(<circle\r\n        id={'node_' + (i + 1) + '_' + j}\r\n        key={'node_' + (i + 1) + '_' + j}\r\n        cx={cx}\r\n        cy={cy}\r\n        r={9} />)\r\n      for (var k = 0; k < weights[i * 2].shape[0]; k++) {\r\n        const source = getNode('node_' + i + '_' + k)\r\n        lines.push(bezierLink(source.props.cx, source.props.cy, cx, cy, layerWeights[k][j], getRatio(layerWeights[k][j])))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (<svg id=\"NNGraph\" viewBox=\"0 0 240 240\">\r\n    <g>\r\n      {lines}\r\n    </g>\r\n    <g>\r\n      {circles}\r\n    </g>\r\n  </svg>)\r\n}\r\n\r\nexport default NNGraph\r\n","import * as tf from '@tensorflow/tfjs'\r\n\r\nexport function createModel (layerData, activation, inputSize, outputSize, loss, optimizer) {\r\n  const model = tf.sequential()\r\n  model.add(tf.layers.dense({ inputShape: [inputSize], units: layerData[0], activation: activation }))\r\n  for (var i = 0; i < layerData.length - 1; i++) {\r\n    model.add(tf.layers.dense({ units: layerData[i + 1], activation: activation }))\r\n  }\r\n  model.add(tf.layers.dense({ units: outputSize, activation: activation }))\r\n  model.compile({ optimizer, loss })\r\n  return model\r\n}\r\n\r\nexport async function localNNLoad (url) {\r\n  return await tf.loadLayersModel('localstorage://' + url)\r\n}\r\n\r\nexport async function localNNSave (model, url) {\r\n  return await model.save('localstorage://' + url)\r\n}\r\n\r\nexport function predictData (model, input) {\r\n  return model.predict(input)\r\n}\r\n","import * as tf from '@tensorflow/tfjs'\r\nimport * as _ from 'lodash'\r\n\r\nexport function getWeightBounds (weights) {\r\n  const maxWeights = weights.map((val) => val.array().then((val) => Math.max(...val.flat())))\r\n  const maxWeight = maxWeights.reduce((head, tail) => head.then((h) => tail.then((t) => h > t ? h : t)))\r\n  const minWeights = weights.map((val) => val.array().then((val) => Math.min(...val.flat())))\r\n  const minWeight = minWeights.reduce((head, tail) => head.then((h) => tail.then((t) => h < t ? h : t)))\r\n  return { maxWeight, minWeight }\r\n}\r\n\r\nexport async function generateData (ranges, numPoints, inputSize, outputSize, vars, funcs) {\r\n  var retval = []\r\n  const illegal = []\r\n\r\n  const rangeRandom = (i) => {\r\n    const rng = ranges[i][1] - ranges[i][0]\r\n    return ranges[i][0] + Math.random() * rng\r\n  }\r\n\r\n  for (var i = 0; i < numPoints; i++) {\r\n    var temp = {}\r\n    for (var j = 0; j < inputSize; j++) {\r\n      temp[vars[j]] = rangeRandom(j)\r\n    }\r\n    for (j = 0; j < outputSize; j++) {\r\n      try {\r\n        temp['_' + j] = funcs[j].evaluate(temp)\r\n      } catch (_) {\r\n        if (!illegal.includes(j + 1)) { illegal.push(j + 1) };\r\n      }\r\n    }\r\n    retval.push(_.cloneDeep(temp))\r\n  }\r\n  if (illegal.length > 0) {\r\n    alert('The following functions are using illegal values! ' + illegal)\r\n  }\r\n  return retval\r\n}\r\n\r\nexport function scrubData (data, vars, outputSize) {\r\n  return tf.tidy(() => {\r\n    const inputs = data.map(d => {\r\n      var retval = []\r\n      vars.forEach((v) => {\r\n        retval.push(d[v])\r\n      })\r\n      return retval\r\n    })\r\n    const outputs = data.map(d => {\r\n      var retval = []\r\n      for (var i = 0; i < outputSize; i++) {\r\n        retval.push(d['_' + i])\r\n      }\r\n      return retval\r\n    })\r\n\r\n    const inputTensor = tf.tensor(inputs)\r\n    const outputTensor = tf.tensor(outputs)\r\n\r\n    const inputMax = inputTensor.max()\r\n    const inputMin = inputTensor.min()\r\n    const outputMax = outputTensor.max()\r\n    const outputMin = outputTensor.min()\r\n\r\n    const normalizedInputs = inputTensor.sub(inputMin).div(inputMax.sub(inputMin))\r\n    const normalizedOutputs = outputTensor.sub(outputMin).div(outputMax.sub(outputMin))\r\n\r\n    return {\r\n      inputs: normalizedInputs,\r\n      outputs: normalizedOutputs,\r\n      inputMax,\r\n      inputMin,\r\n      outputMax,\r\n      outputMin\r\n    }\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { Accordion, Container, Col, Row, DropdownButton, Dropdown, Button, Image } from 'react-bootstrap'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport NNGraph from './NNGraph'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport * as math from 'mathjs'\r\nimport * as _ from 'lodash'\r\nimport { createModel, localNNLoad, localNNSave } from '../ai/NeuralNetworks'\r\nimport { getWeightBounds, generateData, scrubData } from '../ai/util'\r\n\r\nconst PLAY_BUTTON = 'm 35 50 l 0 -27 l 15 9 l 15 9 l 15 9 m 0 0 l -15 9 l -15 9 l -15 9 l 0 -27 z'\r\nconst STOP_BUTTON = 'm 26 74 l 0 -48 l 16 0 l 0 48 l -16 0 m 32 -48 l 16 0 l 0 48 l -16 0 l 0 -48 z'\r\n\r\nconst DEFAULT_VARIABLES = ['x', 'y', 'z', 'w', 't']\r\nconst DEFAULT_FUNCNAMES = ['f', 'g', 'h', 'p', 'q']\r\n\r\nclass NNWidget extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      acti: 'relu',\r\n      actiName: 'ReLU',\r\n      currentLoss: 1.00,\r\n      data: [],\r\n      dataLoading: false,\r\n      epochs: 50,\r\n      funcNames: ['f'],\r\n      funcs: [math.parse('x+y')],\r\n      inputSize: 2,\r\n      layerData: Array(3).fill(3),\r\n      loss: 'meanSquaredError',\r\n      lossName: 'Mean Squared Error',\r\n      maxWeight: Promise.resolve(0.00001),\r\n      minWeight: Promise.resolve(-0.00001),\r\n      modelEpochs: 0,\r\n      numPoints: 100,\r\n      opti: 'sgd',\r\n      optiName: 'Stoch. Gradient Descent',\r\n      outputSize: 1,\r\n      playing: false,\r\n      predictions: [],\r\n      ranges: [[-10, 10], [-10, 10]],\r\n      vars: ['x', 'y']\r\n    }\r\n\r\n    const model = createModel(this.state.layerData, this.state.acti, this.state.inputSize, this.state.outputSize, this.state.loss, this.state.opti)\r\n    this.state.weights = model.getWeights()\r\n    localNNSave(model, 'nn')\r\n  }\r\n\r\n  generateGraphs () {\r\n    if (this.state.data.length === 0) {\r\n      document.getElementById(this.state.vars[0] + '_graph').innerHTML = <h2>Generate some data!</h2>\r\n    }\r\n\r\n    var dataT = {}\r\n    var output = []\r\n\r\n    this.state.vars.forEach((v) => { dataT[v] = [] })\r\n    this.state.funcNames.forEach(() => output.push([]))\r\n    this.state.data.forEach((val) => {\r\n      for (var i = 0; i < this.state.inputSize; i++) {\r\n        dataT[this.state.vars[i]].push(_.cloneDeep(val[this.state.vars[i]]))\r\n      }\r\n      for (i = 0; i < this.state.outputSize; i++) {\r\n        output[i].push(val['_' + i])\r\n      }\r\n    })\r\n\r\n    import('../ui/Graphing').then(Graphing => {\r\n      this.state.vars.forEach((v) => {\r\n        for (var i = 0; i < this.state.outputSize; i++) {\r\n          const elemId = v + '-' + this.state.funcNames[i] + '-graph'\r\n          document.getElementById(elemId).innerHTML = ''\r\n          // eslint-disable-next-line prefer-const\r\n          let data = [{\r\n            x: dataT[v],\r\n            y: output[i],\r\n            name: v,\r\n            mode: 'markers',\r\n            type: 'scatter'\r\n          }]\r\n          if (this.state.predictions.length > 0) {\r\n            data.push({\r\n              x: dataT[v],\r\n              y: this.state.predictions[i],\r\n              name: 'prediction',\r\n              mode: 'markers',\r\n              type: 'scatter'\r\n            })\r\n          }\r\n          Graphing.Scatterplot(elemId, v, this.state.funcNames[i], data)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  rebuildFunc (func, i) {\r\n    const newFuncs = Object.assign([], this.state.funcs)\r\n    newFuncs[i] = math.parse(func)\r\n    this.setState({ funcs: newFuncs })\r\n  }\r\n\r\n  rebuildModel () {\r\n    const model = createModel(this.state.layerData, this.state.acti, this.state.inputSize, this.state.outputSize, this.state.loss, this.state.opti)\r\n    const weights = model.getWeights()\r\n    const { maxWeight, minWeight } = getWeightBounds(weights)\r\n    this.setState({ weights, maxWeight, minWeight, modelEpochs: 0 })\r\n    localNNSave(model, 'nn')\r\n  }\r\n\r\n  async startLearning () {\r\n    const { inputs, outputs, outputMax, outputMin } = scrubData(_.cloneDeep(this.state.data), this.state.vars, this.state.outputSize)\r\n    let model\r\n    try {\r\n      model = await localNNLoad('nn')\r\n      model.compile({ optimizer: this.state.opti, loss: this.state.loss })\r\n    } catch (_) {\r\n      model = createModel(this.state.layerData, this.state.acti, this.state.inputSize, this.state.outputSize, this.state.loss, this.state.opti)\r\n    }\r\n    const onEpochEnd = (_epoch, logs) => {\r\n      const weights = model.getWeights()\r\n      const { maxWeight, minWeight } = getWeightBounds(weights)\r\n      this.setState({ weights, maxWeight, minWeight, currentLoss: logs.loss, modelEpochs: this.state.modelEpochs + 1 })\r\n    }\r\n    await model.fit(\r\n      inputs,\r\n      outputs,\r\n      {\r\n        shuffle: true,\r\n        callbacks: { onEpochEnd },\r\n        epochs: this.state.epochs\r\n      }\r\n    ).then(() => this.setState({\r\n      playing: false,\r\n      predictions: model.predict(inputs)\r\n        .mul(outputMax.sub(outputMin))\r\n        .add(outputMin)\r\n        .transpose()\r\n        .arraySync()\r\n    }, () => {\r\n      this.generateGraphs()\r\n      localNNSave(model, 'nn')\r\n    }))\r\n  }\r\n\r\n  timedLearning (epochs) { this.setState({ epochs }, () => this.togglePlay()) }\r\n\r\n  togglePlay () { this.setState({ playing: !this.state.playing }, () => { if (this.state.playing) this.startLearning() }) }\r\n\r\n  render () {\r\n    return (\r\n      <Container style={{\r\n        backgroundColor: '#f8e297',\r\n        border: 'thick solid',\r\n        borderRadius: '8px',\r\n        borderColor: '#f8d197',\r\n        padding: '15px'\r\n      }}>\r\n        <Col>\r\n          <Row style={{ minHeight: '50vh' }}>\r\n            <Col md={3}>\r\n              <Accordion>\r\n                <Accordion.Toggle as={Row} eventKey=\"0\">\r\n                  <h3>Data Shape</h3>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <div>\r\n                    <br />\r\n                    <h5>Input Size: {this.state.inputSize}</h5>\r\n                    <Slider\r\n                      step={1}\r\n                      min={1}\r\n                      max={5}\r\n                      marks={true}\r\n                      value={this.state.inputSize}\r\n                      onChange={(_e, v) => {\r\n                        this.setState({ inputSize: v }, this.rebuildModel())\r\n                        if (this.state.vars.length < v) {\r\n                          this.state.vars.push(DEFAULT_VARIABLES[v - 1])\r\n                          this.state.ranges.push([-10, 10])\r\n                        } else if (this.state.vars.length > v) {\r\n                          this.state.vars.pop()\r\n                          this.state.ranges.pop()\r\n                        }\r\n                      }} />\r\n                    <h5>Output Size: {this.state.outputSize}</h5>\r\n                    <Slider\r\n                      step={1}\r\n                      min={1}\r\n                      max={5}\r\n                      marks={true}\r\n                      value={this.state.outputSize}\r\n                      onChange={(_e, v) => {\r\n                        this.setState({ outputSize: v }, this.rebuildModel())\r\n                        if (this.state.funcs.length < v) {\r\n                          this.state.funcs.push(\r\n                            math.parse(this.state.vars.join(['+', '-', '*'][Math.floor(Math.random() * 3)])))\r\n                          this.state.funcNames.push(DEFAULT_FUNCNAMES[v - 1])\r\n                        } else if (this.state.funcs.length > v) {\r\n                          this.state.funcs.pop()\r\n                          this.state.funcNames.pop()\r\n                        }\r\n                      }} />\r\n                  </div>\r\n                </Accordion.Collapse>\r\n              </Accordion>\r\n              <hr />\r\n              <Accordion>\r\n                <Accordion.Toggle as={Row} eventKey=\"0\">\r\n                  <h3>Hidden Layers</h3>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <div>\r\n                    <br />\r\n                    <h5>Layers: {this.state.layerData.length}</h5>\r\n                    <Slider\r\n                      step={1}\r\n                      min={1}\r\n                      max={5}\r\n                      marks={true}\r\n                      value={this.state.layerData.length}\r\n                      onChange={(_e, v) => {\r\n                        const layers = this.state.layerData.length\r\n                        if (v > layers) {\r\n                          this.state.layerData.push(3)\r\n                        } else if (v < layers) {\r\n                          this.state.layerData.pop()\r\n                        }\r\n                        this.rebuildModel()\r\n                      }} />\r\n                    {this.state.layerData.map((val, i) => {\r\n                      return <span key={'s' + i}><h5 key={'l' + i}>Layer {i + 1} width: {val}</h5><Slider\r\n                        id={i}\r\n                        key={i}\r\n                        step={1}\r\n                        min={2}\r\n                        max={5}\r\n                        marks={true}\r\n                        value={val}\r\n                        onChange={(_e, v) => {\r\n                          const newLD = Object.assign([], this.state.layerData)\r\n                          newLD[i] = v\r\n                          this.setState({ layerData: newLD }, this.rebuildModel())\r\n                        }} /></span>\r\n                    })}\r\n                  </div>\r\n                </Accordion.Collapse>\r\n              </Accordion>\r\n              <hr />\r\n              <h3>Parameters</h3>\r\n              <br />\r\n              <h5>Activation Function</h5>\r\n              <DropdownButton\r\n                id=\"acti\"\r\n                title={this.state.actiName}\r\n                onSelect={(_ek, e) => {\r\n                  this.setState({ acti: e.target.value, actiName: e.target.innerHTML }, this.rebuildModel())\r\n                }}>\r\n                <Dropdown.Item as=\"button\" value=\"relu\">ReLU</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" value=\"sigmoid\">Sigmoid</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" value=\"softmax\">SoftMax</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" value=\"softplus\">Softplus</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" value=\"softsign\">Softsign</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" value=\"tanh\">Tanh</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" value=\"selu\">SeLU</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" value=\"elu\">ELU</Dropdown.Item>\r\n              </DropdownButton>\r\n              <h5>Optimizer</h5>\r\n              <DropdownButton\r\n                id=\"opti\"\r\n                title={this.state.optiName}\r\n                onSelect={(_ek, e) => {\r\n                  this.setState({ opti: e.target.value, optiName: e.target.innerHTML }, this.rebuildModel())\r\n                }}>\r\n                <Dropdown.Item as=\"button\" value=\"sgd\">Stochastic Gradient Descent</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" value=\"adagrad\">Ada Grad</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" value=\"adadelta\">Ada Delta</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" value=\"adam\">Adam</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" value=\"adamax\">Ada Max</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" value=\"rmsprop\">RMS prop</Dropdown.Item>\r\n              </DropdownButton>\r\n              <h5>Loss</h5>\r\n              <DropdownButton\r\n                id=\"loss\"\r\n                title={this.state.lossName}\r\n                onSelect={(_ek, e) => {\r\n                  this.setState({ loss: e.target.value, lossName: e.target.innerHTML }, this.rebuildModel())\r\n                }}>\r\n                <Dropdown.Item as=\"button\" value=\"hinge\">Hinge Loss</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" value=\"meanSquaredError\">Mean Squared Error</Dropdown.Item>\r\n              </DropdownButton>\r\n              <hr />\r\n              <h3>Controls</h3>\r\n              <br />\r\n              <h5>Points:\r\n                <input\r\n                  min={0}\r\n                  max={10000}\r\n                  type=\"number\"\r\n                  className=\"text-input\"\r\n                  defaultValue={this.state.numPoints}\r\n                  onChange={(e) => this.setState({ numPoints: e.target.value })} /></h5>\r\n              <h5>Epochs:\r\n                <input\r\n                  min={0}\r\n                  max={1000}\r\n                  type=\"number\"\r\n                  className=\"text-input\"\r\n                  defaultValue={this.state.epochs}\r\n                  onChange={(e) => this.setState({ epochs: e.target.value })} /></h5>\r\n              <Button className='margin-15' onClick={() => this.setState({ modelEpochs: 0, currentLoss: 1.0 }, () => localStorage.clear())}> Hard Reset </Button>\r\n              <Button className='margin-15' onClick={async () => {\r\n                const model = await localNNLoad('nn')\r\n                model.save('downloads://MyNetwork')\r\n              }}> Save Weights</Button>\r\n            </Col>\r\n            <Col md={8} className=\"center-column\">\r\n              <Row>\r\n                <Col md={3} className='vertically-center-contents center-column'>\r\n                  <Image src='https://openclipart.org/download/250498/Neural-Network-2.svg' style={{\r\n                    maxWidth: '15vw',\r\n                    maxHeight: '15vh'\r\n                  }}/>\r\n                </Col>\r\n                <Col>\r\n                  <h1 style={{ fontFamily: 'courier' }}><strong>The Neural Network Widget</strong></h1>\r\n                  <h4><strong>Machine Learning, <span style={{ fontStyle: 'oblique' }}>while you wait!</span></strong></h4>\r\n                </Col>\r\n              </Row>\r\n              <Col md={10} className=\"center-column\">\r\n                <div style={{ borderStyle: 'inset', borderColor: '#bc986a', borderWidth: 15, borderRadius: 15, backgroundColor: '#e0d0a4' }}>\r\n                  <NNGraph weights={this.state.weights}/>\r\n                </div>\r\n              </Col>\r\n              <Row>\r\n                <div id=\"weight-gradient\" className=\"weight-gradient\" onMouseMove={(e) => {\r\n                  const offset = e.nativeEvent.offsetX\r\n                  const width = document.getElementById('weight-gradient').clientWidth\r\n                  this.state.maxWeight.then((mx) => {\r\n                    this.state.minWeight.then((mn) => {\r\n                      document.getElementById('current-weight').innerHTML = ((offset / width) * (mx - mn) + mn)\r\n                    })\r\n                  })\r\n                }}\r\n                onMouseOut={(e) => {\r\n                  document.getElementById('current-weight').innerHTML = ''\r\n                }}>\r\n                  <span id=\"current-weight\" style={{ color: 'white' }}></span>\r\n                </div>\r\n              </Row>\r\n              <Row>\r\n                {[10, 50, 100].map((val, i) => {\r\n                  const epochsToRadius = (epochs) => 28 + 0.14 * epochs\r\n                  return (<Col key={val + '_col'}>\r\n                    <svg\r\n                      key={val + '_svg'}\r\n                      viewBox=\"0 0 100 100\"\r\n                      style={{ maxHeight: '10vh', maxWidth: '10vh' }}\r\n                      onClick={() => this.state.data.length > 0 ? this.timedLearning(val) : alert('No data generated!')}>\r\n                      <circle key={val + '_circle'} fill='#f8d197' cx=\"50\" cy=\"50\" r={epochsToRadius(val)} stroke=\"black\"/>\r\n                      <text key={val + '_text'} x=\"50\" y=\"55\" textAnchor=\"middle\" color=\"black\">{val}x</text>\r\n                    </svg>\r\n                  </Col>)\r\n                })}\r\n                <Col style={{ textAlign: 'center' }}>\r\n                  <Spring\r\n                    from={{ color: '#03C04A' }}\r\n                    to={{\r\n                      shape: this.state.playing ? STOP_BUTTON : PLAY_BUTTON,\r\n                      color: this.state.playing ? '#D21404' : '#03C04A'\r\n                    }}>\r\n                    {({ shape, color }) => {\r\n                      return (<svg\r\n                        viewBox=\"0 0 100 100\"\r\n                        style={{ maxHeight: '10vh', maxWidth: '10vh' }}\r\n                        onClick={() => this.state.data.length > 0 ? this.togglePlay() : alert('No data generated!')}>\r\n                        <circle fill={color} cx=\"50\" cy=\"50\" r=\"50\"/>\r\n                        <g>\r\n                          <path fill=\"white\" d={shape} />\r\n                        </g>\r\n                      </svg>)\r\n                    }}\r\n                  </Spring>\r\n                </Col>\r\n                <Col>\r\n                  <h5>Loss: <br/>{this.state.currentLoss.toFixed(5)} <br/>Epochs:<br/>{this.state.modelEpochs}</h5>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"center-column\" style={{ margin: '15px' }}>\r\n                <Col>\r\n                  <Row>\r\n                    <Col style={{ marginRight: '15px' }}>\r\n                      {Array(this.state.inputSize).fill(0).map((_, i) => {\r\n                        return (<Row key={'var' + i}>\r\n                          <h5>Var {i + 1}:</h5>\r\n                          <input\r\n                            key={i}\r\n                            type=\"text\"\r\n                            size=\"3\"\r\n                            className=\"text-input\"\r\n                            defaultValue={this.state.vars[i]}\r\n                            onChange={(e) => {\r\n                              const newVars = Object.assign([], this.state.vars)\r\n                              newVars[i] = e.target.value\r\n                              this.setState({ vars: newVars })\r\n                            }}/>\r\n                          <Slider\r\n                            step={1}\r\n                            min={-100}\r\n                            max={100}\r\n                            value={this.state.ranges[i] ? this.state.ranges[i] : [-10, 10]}\r\n                            valueLabelDisplay=\"auto\"\r\n                            onChange={(_e, v) => {\r\n                              const newRanges = Object.assign([], this.state.ranges)\r\n                              newRanges[i] = v\r\n                              this.setState({ ranges: newRanges })\r\n                            }} />\r\n                        </Row>)\r\n                      })}\r\n                    </Col>\r\n                    <Col>\r\n                      {Array(this.state.outputSize).fill(0).map((_, i) => {\r\n                        return (<Row key={'var' + i}><Col>\r\n                          <Row>\r\n                            <h5>Function {i + 1} Name:\r\n                              <input\r\n                                key={'funcName-' + i}\r\n                                type=\"text\"\r\n                                size=\"3\"\r\n                                className=\"text-input\"\r\n                                defaultValue={this.state.funcNames[i]}\r\n                                onChange={(e) => {\r\n                                  const newFuncNames = Object.assign([], this.state.funcNames)\r\n                                  newFuncNames[i] = e.target.value\r\n                                  this.setState({ funcNames: newFuncNames })\r\n                                }}/>\r\n                            </h5>\r\n                          </Row>\r\n                          <Row>\r\n                            <h5>{this.state.funcNames[i]}({this.state.vars.join(',')})=</h5>\r\n                            <input\r\n                              key={'func-' + i}\r\n                              type=\"text\"\r\n                              className=\"text-input\"\r\n                              defaultValue={this.state.funcs[i]}\r\n                              onBlur={(e) => {\r\n                                this.rebuildFunc(e.target.value, i)\r\n                              }}/>\r\n                          </Row>\r\n                        </Col></Row>)\r\n                      })}\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"center-column\">\r\n                    <Button style={{ margin: '15px' }} onClick={() => {\r\n                      this.setState({ dataLoading: true })\r\n                      generateData(\r\n                        this.state.ranges,\r\n                        this.state.numPoints,\r\n                        this.state.inputSize,\r\n                        this.state.outputSize,\r\n                        this.state.vars,\r\n                        this.state.funcs\r\n                      ).then((retval) => {\r\n                        this.setState({ data: retval, dataLoading: false, predictions: [] }, () => this.generateGraphs())\r\n                      })\r\n                    }}>Generate Data</Button>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <hr />\r\n          <Row>\r\n            <Col className=\"center-column\">\r\n              {this.state.vars.map((val) => {\r\n                return (<div style={{ alignContent: 'center' }} key={'row_' + val}>\r\n                  {this.state.funcNames.map((v) => {\r\n                    return (\r\n                      <div\r\n                        id={val + '-' + v + '-graph'}\r\n                        key={val + '-' + v + '-graph'}\r\n                        style={{\r\n                          border: '8px',\r\n                          borderRadius: '5px'\r\n                        }}></div>\r\n                    )\r\n                  })}\r\n                </div>)\r\n              })}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NNWidget\r\n","import React from 'react'\r\nimport NNWidget from './NNWidget'\r\n\r\nfunction Homepage () {\r\n  return (\r\n    <NNWidget />\r\n  )\r\n}\r\n\r\nexport default Homepage\n","export const EDU_COLOR = '#f8d197'\r\nexport const JOB_COLOR = '#f8e297'\r\n\r\nexport const ANACONDA_SVG = 'https://raw.githubusercontent.com/simple-icons/simple-icons/master/icons/anaconda.svg'\r\nexport const ANGULAR_SVG = 'https://www.vectorlogo.zone/logos/angular/angular-icon.svg'\r\nexport const AWS_SVG = 'https://www.vectorlogo.zone/logos/amazon_aws/amazon_aws-icon.svg'\r\nexport const CPP_SVG = 'https://raw.githubusercontent.com/abranhe/programming-languages-logos/master/src/cpp/cpp.svg'\r\nexport const CSHARP_SVG = 'https://raw.githubusercontent.com/vscode-icons/vscode-icons/master/icons/file_type_csharp2.svg'\r\nexport const DJANGO_SVG = 'https://www.vectorlogo.zone/logos/djangoproject/djangoproject-icon.svg'\r\nexport const DOCKER_SVG = 'https://www.vectorlogo.zone/logos/docker/docker-icon.svg'\r\nexport const DOTNET_SVG = 'https://www.vectorlogo.zone/logos/dotnet/dotnet-icon.svg'\r\nexport const GCLOUD_SVG = 'https://www.vectorlogo.zone/logos/google_cloud/google_cloud-icon.svg'\r\nexport const GITHUB_SVG = 'https://www.vectorlogo.zone/logos/github/github-icon.svg'\r\nexport const JAVA_SVG = 'https://www.vectorlogo.zone/logos/java/java-icon.svg'\r\nexport const JAVASCRIPT_SVG = 'https://www.vectorlogo.zone/logos/javascript/javascript-icon.svg'\r\nexport const JENKINS_SVG = 'https://www.vectorlogo.zone/logos/jenkins/jenkins-icon.svg'\r\nexport const KALI_PNG = 'https://img.icons8.com/color/48/000000/kali-linux.png'\r\nexport const KUBERNETES_SVG = 'https://www.vectorlogo.zone/logos/kubernetes/kubernetes-icon.svg'\r\nexport const LATEX_SVG = 'https://raw.githubusercontent.com/detain/svg-logos/master/svg/latex.svg'\r\nexport const MAILCHIMP_SVG = 'https://www.vectorlogo.zone/logos/mailchimp/mailchimp-icon.svg'\r\nexport const MATHEMATICA_SVG = 'https://raw.githubusercontent.com/detain/svg-logos/master/svg/mathematica-1.svg'\r\nexport const MATLAB_SVG = 'https://raw.githubusercontent.com/vscode-icons/vscode-icons/master/icons/file_type_matlab.svg'\r\nexport const MAVEN_SVG = 'https://raw.githubusercontent.com/vscode-icons/vscode-icons/master/icons/file_type_maven.svg'\r\nexport const MONGODB_SVG = 'https://www.vectorlogo.zone/logos/mongodb/mongodb-icon.svg'\r\nexport const MYSQL_SVG = 'https://www.vectorlogo.zone/logos/mysql/mysql-icon.svg'\r\nexport const NATIVESCRIPT = 'https://raw.githubusercontent.com/detain/svg-logos/master/svg/nativescript.svg'\r\nexport const NUMPY_SVG = 'https://www.vectorlogo.zone/logos/numpy/numpy-icon.svg'\r\nexport const PYTHON_SVG = 'https://www.vectorlogo.zone/logos/python/python-icon.svg'\r\nexport const PYTORCH_SVG = 'https://www.vectorlogo.zone/logos/pytorch/pytorch-icon.svg'\r\nexport const R_SVG = 'https://www.vectorlogo.zone/logos/r-project/r-project-icon.svg'\r\nexport const ROR_SVG = 'https://upload.wikimedia.org/wikipedia/commons/c/c3/Ruby_on_Rails_logo.svg'\r\nexport const RUBY_SVG = 'https://www.vectorlogo.zone/logos/ruby-lang/ruby-lang-icon.svg'\r\nexport const RUST_SVG = 'https://www.vectorlogo.zone/logos/rust-lang/rust-lang-icon.svg'\r\nexport const SALESFORCE_SVG = 'https://www.vectorlogo.zone/logos/salesforce/salesforce-ar21.svg'\r\nexport const SCALA_SVG = 'https://www.vectorlogo.zone/logos/scala-lang/scala-lang-icon.svg'\r\nexport const SKLEARN_SVG = 'https://upload.wikimedia.org/wikipedia/commons/0/05/Scikit_learn_logo_small.svg'\r\nexport const SWAGGER_SVG = 'https://raw.githubusercontent.com/gilbarbara/logos/master/logos/swagger.svg'\r\nexport const TENSORFLOW_SVG = 'https://www.vectorlogo.zone/logos/tensorflow/tensorflow-icon.svg'\r\nexport const TYPESCRIPT_SVG = 'https://www.vectorlogo.zone/logos/typescriptlang/typescriptlang-icon.svg'\r\nexport const VUE_SVG = 'https://raw.githubusercontent.com/detain/svg-logos/master/svg/vue-9.svg'\r\nexport const WIRESHARK_SVG = 'https://raw.githubusercontent.com/maxogden/hexbin/gh-pages/vector/wireshark.svg'\r\nexport const XAMARIN_SVG = 'https://raw.githubusercontent.com/detain/svg-logos/master/svg/xamarin.svg'\r\n","import React, { useState } from 'react'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { Container, Col, Row, Image } from 'react-bootstrap'\r\nimport './resume.css'\r\n\r\nconst calc = (x, y, title, stable = false) => {\r\n  if (stable) { return [0, 0, 1.02] }\r\n  const card = document.getElementById(title)\r\n  const bounds = card.getBoundingClientRect()\r\n  return [\r\n    -5 * (y - bounds.y - (bounds.height / 2)) / bounds.height,\r\n    5 * (x - bounds.x - (bounds.width / 2)) / bounds.width,\r\n    1.02\r\n  ]\r\n}\r\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\r\n\r\nfunction ResumeItem (itemId, title, position, bullets, startDate, endDate, logo, tools, itemColor) {\r\n  const [props, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } }))\r\n  const [stable, setStable] = useState(false)\r\n  return (\r\n    <li key={'list_item_' + itemId} className=\"list-unstyled padding-15\">\r\n      <animated.div\r\n        id={itemId}\r\n        className=\"card padding-15\"\r\n        onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y, itemId, stable) })}\r\n        onMouseUp={({ clientX: x, clientY: y }) => {\r\n          set({ xys: calc(x, y, itemId, !stable) })\r\n          setStable(!stable)\r\n        }}\r\n        onMouseLeave={() => {\r\n          set({ xys: [0, 0, 1] })\r\n          setStable(false)\r\n        }}\r\n        style={{\r\n          backgroundColor: itemColor,\r\n          // eslint-disable-next-line react/prop-types\r\n          transform: props.xys.interpolate(trans)\r\n        }}>\r\n        <Container>\r\n          <Row xs>\r\n            <Col md={3} className=\"vertically-center-contents\">{logo}</Col>\r\n            <Col>\r\n              <Col><h3 className=\"title\">{title}</h3></Col>\r\n              <Col>\r\n                <Col md=\"auto\"><h5>{position}</h5></Col>\r\n                <Col md=\"auto\"><h5>\r\n                  {new Intl.DateTimeFormat('en-GB', {\r\n                    year: 'numeric',\r\n                    month: 'short'\r\n                  }).format(startDate)} -\r\n                  {new Intl.DateTimeFormat('en-GB', {\r\n                    year: 'numeric',\r\n                    month: 'short'\r\n                  }).format(endDate)}\r\n                </h5></Col>\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row md=\"auto\">\r\n            <Col><ul>{bullets.map((b, i) => <li key={'bullet_' + itemId + i}>{b}</li>)}</ul></Col>\r\n          </Row>\r\n          <Row>\r\n            <Row md=\"auto\" className=\"padding-15\" style={{ margin: 'auto' }}>\r\n              {tools.map((t, i) => <div key={'image_div_' + itemId + i} style={{ padding: '10px' }}><Image src={t} height=\"50\"/></div>)}\r\n            </Row>\r\n          </Row>\r\n        </Container>\r\n      </animated.div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ResumeItem\r\n","import React from 'react'\r\nimport { Image } from 'react-bootstrap'\r\nimport { PYTHON_SVG, NUMPY_SVG, TENSORFLOW_SVG, PYTORCH_SVG, SKLEARN_SVG, CPP_SVG, CSHARP_SVG, MATLAB_SVG, R_SVG, RUST_SVG, XAMARIN_SVG, DOTNET_SVG, KALI_PNG, WIRESHARK_SVG, AWS_SVG, GCLOUD_SVG, EDU_COLOR, JAVA_SVG, MYSQL_SVG, TYPESCRIPT_SVG, JAVASCRIPT_SVG, RUBY_SVG, JENKINS_SVG, MAVEN_SVG, JOB_COLOR, MONGODB_SVG, SCALA_SVG, ANGULAR_SVG, NATIVESCRIPT, VUE_SVG, MATHEMATICA_SVG, ROR_SVG, SWAGGER_SVG, LATEX_SVG, ANACONDA_SVG, GITHUB_SVG, DOCKER_SVG, KUBERNETES_SVG, DJANGO_SVG, MAILCHIMP_SVG, SALESFORCE_SVG } from '../ui/Constants'\r\nimport ResumeItem from './ResumeItem'\r\n\r\nexport const CHRON = ['mscs', 'aaq', 'binds', 'bscs', 'bsm', 'ml', 'tb', 'bgu', 'vyx']\r\nexport const WORK = ['aaq', 'binds', 'tb', 'bgu', 'vyx', 'mscs', 'bscs', 'bsm', 'ml']\r\nexport const EDU = ['mscs', 'bscs', 'bsm', 'ml', 'aaq', 'binds', 'tb', 'bgu', 'vyx']\r\n\r\nconst items = {\r\n  aaq: {\r\n    title: 'Applause App Quality',\r\n    position: 'Full Stack Software Engineer',\r\n    bullets: [\r\n      'Developed and deployed features, patches, and migrations for multi-tier apps.',\r\n      'Worked on a team to plan, program, and review code deployed to thousands of users using Jenkins.',\r\n      'Implemented requested features in Angular, JavaScipt, TypeScript, Ruby, MySQL, and Java.'\r\n    ],\r\n    startDate: new Date(2019, 5),\r\n    endDate: new Date(2020, 3),\r\n    logo: {\r\n      src: 'http://seekvectorlogo.com/wp-content/uploads/2019/01/applause-vector-logo.png',\r\n      alt: 'Applause logo',\r\n      style: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px',\r\n        padding: '5px'\r\n      }\r\n    },\r\n    tools: [\r\n      JAVA_SVG,\r\n      TYPESCRIPT_SVG,\r\n      JAVASCRIPT_SVG,\r\n      MYSQL_SVG,\r\n      RUBY_SVG,\r\n      JENKINS_SVG,\r\n      MAVEN_SVG\r\n    ],\r\n    itemColor: JOB_COLOR\r\n  },\r\n  bgu: {\r\n    title: 'Plant Lipid Biotechnology Lab at Ben Gurion University',\r\n    position: 'Research Assitant',\r\n    bullets: [\r\n      'Worked with low-res NMR data and performing analysis using PDCO in Matlab on plant lipids for use in the food, pharmaceutical, cosmetics and bio-energy industries.',\r\n      'Proved correlation between T1, T2 spin interactions and various characteristics of a substance.',\r\n      'Published a paper on the findings: Energy Fuels 32, 4, 5090-5102.'\r\n    ],\r\n    startDate: new Date(2017, 4),\r\n    endDate: new Date(2017, 7),\r\n    logo: {\r\n      src: 'https://upload.wikimedia.org/wikipedia/en/8/8f/Ben-Gurion_University_of_the_Negev_logo2.svg',\r\n      alt: 'BGU logo',\r\n      style: {}\r\n    },\r\n    tools: [\r\n      MATLAB_SVG,\r\n      R_SVG,\r\n      LATEX_SVG,\r\n      PYTHON_SVG,\r\n      ANACONDA_SVG,\r\n      CPP_SVG\r\n    ],\r\n    itemColor: JOB_COLOR\r\n  },\r\n  binds: {\r\n    title: 'Biologically Inspired Neural and Dynamical Systems Laboratory',\r\n    position: 'Research Assistant',\r\n    bullets: [\r\n      'Performed research in biologically-inspired computing and computational methods.',\r\n      'Built, tested, and improved machine learning models, biological computing methods, data visualization tools, and application testing pipelines.',\r\n      'Presented weekly and bi-weekly talks about current and relevant research to lab group.'\r\n    ],\r\n    startDate: new Date(2016, 11),\r\n    endDate: new Date(2019, 5),\r\n    logo: {\r\n      src: 'https://groups.cs.umass.edu/binds/wp-content/uploads/sites/21/2019/05/binds.png',\r\n      alt: 'BINDS logo',\r\n      style: {\r\n        backgroundColor: 'black',\r\n        borderRadius: '5px',\r\n        padding: '5px'\r\n      }\r\n    },\r\n    tools: [\r\n      PYTHON_SVG,\r\n      R_SVG,\r\n      CPP_SVG,\r\n      NUMPY_SVG,\r\n      TENSORFLOW_SVG,\r\n      PYTORCH_SVG,\r\n      AWS_SVG,\r\n      MONGODB_SVG\r\n    ],\r\n    itemColor: JOB_COLOR\r\n  },\r\n  bscs: {\r\n    title: 'University of Massachusetts at Amherst',\r\n    position: 'Bachelors of Science in Computer Science focusing on Machine Learning and Artificial Intelligence',\r\n    bullets: [\r\n      'Courses include artificial intelligence, machine learning, robotics, natural language processing, mobile computing, bioinformatics, advanced algorithm design',\r\n      'Performed research on reservoir computing and homgenous learning architectures',\r\n      'Undergraduate thesis: Sine Circle Mappings in Machine Learning',\r\n      'GPA: 3.5'\r\n    ],\r\n    startDate: new Date(2015, 8),\r\n    endDate: new Date(2018, 4),\r\n    logo: {\r\n      src: 'https://raw.githubusercontent.com/detain/svg-logos/master/svg/umass.svg',\r\n      alt: 'UMass logo',\r\n      style: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px',\r\n        padding: '5px'\r\n      }\r\n    },\r\n    tools: [\r\n      PYTHON_SVG,\r\n      NUMPY_SVG,\r\n      TENSORFLOW_SVG,\r\n      SKLEARN_SVG,\r\n      CPP_SVG,\r\n      JAVA_SVG,\r\n      JAVASCRIPT_SVG,\r\n      SCALA_SVG,\r\n      ANGULAR_SVG,\r\n      NATIVESCRIPT,\r\n      VUE_SVG,\r\n      MATLAB_SVG,\r\n      R_SVG,\r\n      AWS_SVG\r\n    ],\r\n    itemColor: EDU_COLOR\r\n  },\r\n  bsm: {\r\n    title: 'University of Massachusetts at Amherst',\r\n    position: 'Bachelors of Science in Mathematics focusing on Applied Mathematics',\r\n    bullets: [\r\n      'Courses include mathematical modeling, computation mathematics, advanced calculus, real anlysis, partial differential equations',\r\n      'GPA: 3.6'\r\n    ],\r\n    startDate: new Date(2015, 8),\r\n    endDate: new Date(2018, 4),\r\n    logo: {\r\n      src: 'https://raw.githubusercontent.com/detain/svg-logos/master/svg/umass.svg',\r\n      alt: 'UMass logo',\r\n      style: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px',\r\n        padding: '5px'\r\n      }\r\n    },\r\n    tools: [\r\n      MATLAB_SVG,\r\n      R_SVG,\r\n      MATHEMATICA_SVG\r\n    ],\r\n    itemColor: EDU_COLOR\r\n  },\r\n  ml: {\r\n    title: 'University of Massachusetts at Amherst',\r\n    position: 'Minor of Linguistics',\r\n    bullets: [\r\n      'Courses include syntax, early language development, phonetics, natural language processing'\r\n    ],\r\n    startDate: new Date(2015, 8),\r\n    endDate: new Date(2018, 4),\r\n    logo: {\r\n      src: 'https://raw.githubusercontent.com/detain/svg-logos/master/svg/umass.svg',\r\n      alt: 'UMass logo',\r\n      style: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px',\r\n        padding: '5px'\r\n      }\r\n    },\r\n    tools: [],\r\n    itemColor: EDU_COLOR\r\n  },\r\n  mscs: {\r\n    title: 'University of Massachusetts at Amherst',\r\n    position: 'Masters of Science in Computer Science focusing on Machine Learning and Artificial Intelligence',\r\n    bullets: [\r\n      'Courses include artificial intelligence, machine learning, reinforcement learning, natural language processing, neural learning, biological computing, bioinformatics, penetration testing, distributed systems, programming languages, digital forensics, and internet law.',\r\n      'Performed research on recurrent learning models and lightshift computation.',\r\n      'GPA: 3.6'\r\n    ],\r\n    startDate: new Date(2018, 4),\r\n    endDate: new Date(2020, 7),\r\n    logo: {\r\n      src: 'https://raw.githubusercontent.com/detain/svg-logos/master/svg/umass.svg',\r\n      alt: 'Umass logo',\r\n      style: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px',\r\n        padding: '5px'\r\n      }\r\n    },\r\n    tools: [\r\n      PYTHON_SVG,\r\n      NUMPY_SVG,\r\n      TENSORFLOW_SVG,\r\n      PYTORCH_SVG,\r\n      SKLEARN_SVG,\r\n      CPP_SVG,\r\n      CSHARP_SVG,\r\n      MATLAB_SVG,\r\n      R_SVG,\r\n      RUST_SVG,\r\n      XAMARIN_SVG,\r\n      DOTNET_SVG,\r\n      KALI_PNG,\r\n      WIRESHARK_SVG,\r\n      AWS_SVG,\r\n      GCLOUD_SVG\r\n    ],\r\n    itemColor: EDU_COLOR\r\n  },\r\n  tb: {\r\n    title: 'Twist Bioscience',\r\n    position: 'Software Development Intern',\r\n    bullets: [\r\n      'Built and deployed APIs for auto-mailing, multi-stack variable updating, and pipeline integration.',\r\n      'Coordinated updates in Docker with Kubernetes variables through a custom web API.',\r\n      'Created a documentation generator using JavaScript, Swagger API, and Ruby on Rails.'\r\n    ],\r\n    startDate: new Date(2018, 4),\r\n    endDate: new Date(2018, 7),\r\n    logo: {\r\n      src: 'https://upload.wikimedia.org/wikipedia/commons/8/8c/Twist_Bioscience_Official_Logo.png',\r\n      alt: 'Umass logo',\r\n      style: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px',\r\n        padding: '5px'\r\n      }\r\n    },\r\n    tools: [\r\n      JAVASCRIPT_SVG,\r\n      ROR_SVG,\r\n      DOCKER_SVG,\r\n      KUBERNETES_SVG,\r\n      DJANGO_SVG,\r\n      SWAGGER_SVG,\r\n      MAILCHIMP_SVG\r\n    ],\r\n    itemColor: JOB_COLOR\r\n  },\r\n  vyx: {\r\n    title: 'Variantyx Inc.',\r\n    position: 'Software Development Intern',\r\n    bullets: [\r\n      'Contributed to development of a platform for genomic-based disease testing and diagnosis.',\r\n      'Helped design and write automation and calculation APIs.',\r\n      'Project: Pedigree svg image generator.'\r\n    ],\r\n    startDate: new Date(2016, 5),\r\n    endDate: new Date(2016, 7),\r\n    logo: {\r\n      src: 'https://res-5.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_170,w_170,f_auto,b_white,q_auto:eco/ispryndd6bbkizck5dth',\r\n      alt: 'Variantyx logo',\r\n      style: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px',\r\n        padding: '5px'\r\n      }\r\n    },\r\n    tools: [\r\n      PYTHON_SVG,\r\n      SALESFORCE_SVG,\r\n      GITHUB_SVG\r\n    ],\r\n    itemColor: JOB_COLOR\r\n  }\r\n}\r\n\r\nfunction ResumeList (order) {\r\n  return (\r\n    <ul>\r\n      {order.map((itemId) => {\r\n        return ResumeItem(\r\n          itemId,\r\n          items[itemId].title,\r\n          items[itemId].position,\r\n          items[itemId].bullets,\r\n          items[itemId].startDate,\r\n          items[itemId].endDate,\r\n          <Image\r\n            src={items[itemId].logo.src}\r\n            alt={items[itemId].logo.alt}\r\n            style={items[itemId].logo.style}\r\n            fluid />,\r\n          items[itemId].tools,\r\n          items[itemId].itemColor\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ResumeList\n","import React, { useState } from 'react'\r\nimport { Container, Col, Row, Button, ButtonGroup, ButtonToolbar } from 'react-bootstrap'\r\nimport ResumeList, { CHRON, EDU, WORK } from './ResumeList'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport delay from 'delay'\r\nimport CV from '../../static/RoyJackmanCV.pdf'\r\n\r\nfunction Resume () {\r\n  const [order, setOrder] = useState(CHRON)\r\n  const [props, set] = useSpring(() => ({ opacity: 1 }))\r\n  const trans = async (order) => {\r\n    set({ opacity: 0 })\r\n    await delay(300)\r\n    setOrder(order)\r\n    set({ opacity: 1 })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col md=\"auto\" className=\"center-column\">\r\n          <ButtonToolbar>\r\n            <ButtonGroup className=\"mr-2\">\r\n              <Button onClick={() => trans(CHRON)}>Chronological</Button>\r\n              <Button onClick={() => trans(WORK)}>Work First</Button>\r\n              <Button onClick={() => trans(EDU)}>School First</Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup className=\"mr-2\">\r\n              <Button><a style={{ textDecoration: 'none', color: 'white' }} href={CV} download=\"RoyJackmanCV.pdf\">Get me as a PDF!</a></Button>\r\n            </ButtonGroup>\r\n          </ButtonToolbar>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col id=\"resume-list\" md={13} className=\"center-column\">\r\n          <animated.div style={props}>\r\n            {new ResumeList(order)}\r\n          </animated.div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Resume\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister()\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Container, Row, Col, Button, Image } from 'react-bootstrap'\r\nimport './ui.css'\r\nimport logo from '../../svg/crow.svg'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <Container fluid className=\"header primary-color\">\r\n        <Row>\r\n          <Col sm={1}>\r\n            <a href=\"/\"><Image src={logo} alt=\"logo\" height=\"75\"/></a>\r\n          </Col>\r\n          <Col className=\"vertically-center-contents align-left\">\r\n            <a href=\"/\" className=\"unstyled-link\"><h1>Roy Jackman</h1></a>\r\n          </Col>\r\n          <Col />\r\n          <Col md=\"auto\" className=\"center-text\">\r\n            <Button block href=\"/\" variant=\"outline-dark\">Home</Button>\r\n          </Col>\r\n          <Col md=\"auto\" className=\"center-text\">\r\n            <Button block href=\"/resume\" variant=\"outline-dark\">Resume</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { FaGithub, FaLinkedin } from 'react-icons/fa'\r\nimport { GrMail } from 'react-icons/gr'\r\nimport './ui.css'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <Container fluid className=\"primary-color white-text\">\r\n        <Row style={{ paddingTop: '8px' }}>\r\n          <Col />\r\n          <Col md={5}>\r\n            <h5 className=\"title\">The Riddle Section</h5>\r\n            <p className=\"justified\">If a crab and a half weigh a pound and a half, and the half crab weighs as much again as the whole crab, how much does half the whole crab and the whole of the half crab weigh?</p>\r\n          </Col>\r\n          <Col md=\"auto\">\r\n            <h5 className=\"title\">Links</h5>\r\n            <ul>\r\n              <li className=\"list-unstyled\"><a href=\"http://github.com/royJackman\"><FaGithub /> Github</a></li>\r\n              <li className=\"list-unstyled\"><a href=\"https://www.linkedin.com/in/roy-jackman/\"><FaLinkedin /> LinkedIn</a></li>\r\n              <li className=\"list-unstyled\"><a href=\"mailto:jackman.roy@gmail.com\"><GrMail /> Email</a></li>\r\n            </ul>\r\n          </Col>\r\n          <Col />\r\n        </Row>\r\n        <Row>\r\n          <Col />\r\n          <Col md=\"auto\">&copy; {new Date().getFullYear()} Copyright Roy Jackman. All Rights Reserved</Col>\r\n          <Col />\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\r\nimport './index.css'\r\nimport Homepage from './components/homepage/Homepage'\r\nimport Resume from './components/resume/Resume'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport Header from './components/ui/Header'\r\nimport Footer from './components/ui/Footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst router = (\r\n  <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n    <Header />\r\n    <div className=\"switch\">\r\n      <Switch>\r\n        <Route exact path='/' component={Homepage} />\r\n        <Route exact path='/resume' component={Resume} />\r\n      </Switch>\r\n    </div>\r\n    <Footer />\r\n  </Router>\r\n)\r\n\r\nReactDOM.render(router, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}